/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package varun;

import static varun.Varun.counter;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        J1 = new javax.swing.JTextField();
        J2 = new javax.swing.JTextField();
        J3 = new javax.swing.JTextField();
        J4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("mob ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("mob Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Style");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Price");

        jButton1.setText("|<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("<");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(">");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(">|");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Add");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jToggleButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(J1)
                            .addComponent(J2)
                            .addComponent(J3)
                            .addComponent(J4)))
                    .addComponent(jLabel4))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(J1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(J2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(J3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(J4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jToggleButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                               

                   
 int value;    
String ID=J1.getText();
String name=J2.getText();
String Colour=J3.getText();
String cost=J4.getText();
Amn.count=Amn.count+1;
Amn.counter=String.valueOf(Amn.count);



    try
    {
        Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String query2="SELECT NO FROM mob ORDER BY no DESC LIMIT 1";
         ResultSet rs=stmt.executeQuery(query2);
        if (rs.next())
                {
         
             counter=rs.getString("NO");
                }
        System.out.println(counter);
         value=Integer.parseInt(counter);
         value++;
         counter=Integer.toString(value);
        String query="INSERT INTO mob VALUES('"+ID+"','"+name+"','"+Colour+"','"+cost+"','"+value+"');";
        stmt.executeUpdate(query);
        JOptionPane.showMessageDialog(this,"Details added");
        J1.setText("");
        J3.setText("");
        J4.setText("");
        J2.setText("");
        
        
       
    }
    catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }


    }                                              

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
          String ID=J1.getText();
         
          if (ID.isEmpty())
          {
              J1.setText("");
              J2.setText("");
        JOptionPane.showMessageDialog(this,"Enter ID");
          }
         
      else
          {
              try
              {
                  Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String query="SELECT ID,Name,Colour FROM mob WHERE ID='"+ID+"';";
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next())
                {
             String cost = rs.getString("COST");
             String Colour  = rs.getString("Colour");
             String Name=rs.getString("mobname");
             J3.setText(Colour);
             J4.setText(cost);
             J2.setText(cost);
             
             
              }
        else
        JOptionPane.showMessageDialog(this,"Sorry details not found");
                  
                  
              }
              catch (Exception e)
{
               JOptionPane.showMessageDialog(this, e.getMessage());
}
              
          }

                  
          
    }                                        

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String ID=J1.getText();
        String name=J2.getText();
        String Colour=J3.getText();
        String cost=J4.getText();


    try
    {
        Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String query=" UPDATE mob SET name='"+name+"',Colour='"+Colour+"',cost='"+cost+"' WHERE ID='"+ID+"';";
        stmt.executeUpdate(query);
        JOptionPane.showMessageDialog(this,"Updated");
        J1.setText(ID);
        J2.setText(name);
        J3.setText(Colour);
        J4.setText(cost);
        
    }
    catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
    }                                        

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String ID=J1.getText();
        int value;
        if (ID.isEmpty())
          {
              J1.setText("");
              J2.setText("");
        JOptionPane.showMessageDialog(this,"Enter ID");
          }
        else
        {


    try
    {
        
        Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String query2="SELECT NO FROM mob ORDER BY no DESC LIMIT 1";
         ResultSet rs=stmt.executeQuery(query2);
        if (rs.next())
                {
         
             counter=rs.getString("NO");
                }
        System.out.println(counter);
         value=Integer.parseInt(counter);
         value--;
         counter=Integer.toString(value);
        String query="DELETE FROM mob WHERE ID='"+ID+"';";
        stmt.executeUpdate(query);
        JOptionPane.showMessageDialog(this,"Deleted");
        J1.setText("");
              J2.setText("");
              J3.setText("");
              J4.setText("");
              
    }
    catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
String ID=J1.getText();


String numberr;
          if (ID.isEmpty())
          {
              J1.setText("");
              J2.setText("");
        JOptionPane.showMessageDialog(this,"Enter ID");
          }
         
      else
          {
              try
              {
                  Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String findnumber="SELECT NO from mob WHERE ID='"+ID+"';";
        ResultSet rs1=stmt.executeQuery(findnumber);
        
        if (rs1.next())
        {
             numberr=rs1.getString("No");
              String query="SELECT * FROM mob WHERE NO>'"+numberr+"'ORDER BY NO  LIMIT 1;";
              
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next())
                {
             String cost1 = rs.getString("COST");
             String Colour1  = rs.getString("Colour");
             String idd=rs.getString("ID");
             String name=rs.getString("name");
             J2.setText(name);
             J3.setText(Colour1);
             J4.setText(cost1);
             J1.setText(idd);
             
              }
           
        }
        
       
        else
        JOptionPane.showMessageDialog(this,"Sorry details not found");
                  
                  
              }
              catch (Exception e)
{
               JOptionPane.showMessageDialog(this, e.getMessage());
}
              
          }

                  
          
        
    }                                        

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        String ID=J1.getText();


String numberr;
          if (ID.isEmpty())
          {
              J1.setText("");
              J2.setText("");
        JOptionPane.showMessageDialog(this,"Enter ID");
          }
         
      else
          {
              try
              {
                  Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String findnumber="SELECT NO from mob WHERE ID='"+ID+"';";
        ResultSet rs1=stmt.executeQuery(findnumber);
        
        if (rs1.next())
        {
             numberr=rs1.getString("No");
              String query="SELECT * FROM mob WHERE NO <'"+numberr+"'ORDER BY NO DESC LIMIT 1;";
              
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next())
                {
             String cost1 = rs.getString("COST");
             String Colour1  = rs.getString("Colour");
             String idd=rs.getString("ID");
             String name=rs.getString("name");
             J2.setText(name);
             J3.setText(Colour1);
             J4.setText(cost1);
             J1.setText(idd);
             
              }
           
        }
        
       
        else
        JOptionPane.showMessageDialog(this,"Sorry details not found");
                  
                  
              }
              catch (Exception e)
{
               JOptionPane.showMessageDialog(this, e.getMessage());
}
              
          }
    }                                              

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
         
         
         String cc=counter;
         
      
          
              try
              {
                  Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String query="SELECT * FROM mob WHERE NO='"+cc+"';";
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next())
                {
             String ID=rs.getString("ID");
             String cost = rs.getString("COST");
             String Colour  = rs.getString("Colour");
             String Name=rs.getString("mobname");
             J1.setText(ID);
             J3.setText(Colour);
             J4.setText(cost);
             J2.setText(Name);
             
             
              }
       
                  
                  
              }
              catch (Exception e)
{
               JOptionPane.showMessageDialog(this, e.getMessage());
}
              
          

    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
         
      
          
              try
              {
                  Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        
        String query="SELECT * FROM mob ORDER BY NO  LIMIT 1;";
        
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next())
                {
             String ID=rs.getString("ID");
             String cost = rs.getString("COST");
             String Colour  = rs.getString("Colour");
             String Name=rs.getString("name");
             J1.setText(ID);
             J3.setText(Colour);
             J4.setText(cost);
             J2.setText(Name);
             
             
              }
       
                  
                  
              }
              catch (Exception e)
{
               JOptionPane.showMessageDialog(this, e.getMessage());
}
            
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                    try
              {
                  Class.forName("java.sql.DriverManager");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/abc","root","root");
        Statement stmt=(Statement)con.createStatement();
        String query="SELECT NO FROM mob ORDER BY no DESC LIMIT 1";
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next())
                {
         
             counter=rs.getString("NO");   
             
             
              }
            
      
                  
                  
              }
              catch (Exception e)
{
               
}
                   
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField J1;
    private javax.swing.JTextField J2;
    private javax.swing.JTextField J3;
    private javax.swing.JTextField J4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration                   
}
